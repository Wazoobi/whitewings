#pragma once

#include "CBase.h"

class CProjectile : public CBase
{

protected:
	CBase*	m_pOwner;		// The object that fired the projectile

public:
	CProjectile();
	virtual ~CProjectile();

	inline CBase* GetOwner() const	{return m_pOwner;}

	void SetOwner(CBase* pOwner)	{m_pOwner = pOwner;}

	//////////////////////////////////////////////////////////////////////////
	//	Function	:	Checks for collision
	//
	//	Purpose		:	Returns true if there is a collision
	//////////////////////////////////////////////////////////////////////////
	virtual bool CheckCollision(CBase* pBase);

	//////////////////////////////////////////////////////////////////////////
	//	Function	:	Updates
	//
	//	Purpose		:	Updates data members based on time.
	//////////////////////////////////////////////////////////////////////////
	virtual void Update(float fElapsedTime);

	//////////////////////////////////////////////////////////////////////////
	//	Function	:	Render
	//
	//	Purpose		:	Draws to the screen.
	//////////////////////////////////////////////////////////////////////////
	virtual void Render(void);
};